{"ast":null,"code":"\n// import React, { useEffect, useState } from \"react\";\n// import axios from \"axios\";\n\n// const utils = () => {\n\n// const [files, setFiles] = useState([]);\n//   const [loading, setLoading] = useState(true);\n\n//  const fetchFiles = async () => {\n//     try {\n//       const token = localStorage.getItem(\"token\");\n//       // console.log(\"Token being sent:\", token);\n//       const res = await axios.get(\"http://localhost:5000/api/files/list\", {\n//         headers: { Authorization: `Bearer ${token}` },\n//       });\n//       // console.log(\"Files fetched:\", res.data.files);\n//       setFiles(res.data.files);\n//     } catch (err) {\n//       console.error(\"Failed to fetch files\", err);\n//     } finally {\n//       setLoading(false);\n//     }\n//   };\n\n//   return (\n//     <div>utils</div>\n//   )\n// }\n\n// export default utils","map":{"version":3,"names":[],"sources":["D:/react/myFiles/data-storage-client/src/components/utils.js"],"sourcesContent":["\r\n// import React, { useEffect, useState } from \"react\";\r\n// import axios from \"axios\";\r\n\r\n// const utils = () => {\r\n  \r\n// const [files, setFiles] = useState([]);\r\n//   const [loading, setLoading] = useState(true);\r\n\r\n//  const fetchFiles = async () => {\r\n//     try {\r\n//       const token = localStorage.getItem(\"token\");\r\n//       // console.log(\"Token being sent:\", token);\r\n//       const res = await axios.get(\"http://localhost:5000/api/files/list\", {\r\n//         headers: { Authorization: `Bearer ${token}` },\r\n//       });\r\n//       // console.log(\"Files fetched:\", res.data.files);\r\n//       setFiles(res.data.files);\r\n//     } catch (err) {\r\n//       console.error(\"Failed to fetch files\", err);\r\n//     } finally {\r\n//       setLoading(false);\r\n//     }\r\n//   };\r\n\r\n//   return (\r\n//     <div>utils</div>\r\n//   )\r\n// }\r\n\r\n// export default utils"],"mappings":";AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}