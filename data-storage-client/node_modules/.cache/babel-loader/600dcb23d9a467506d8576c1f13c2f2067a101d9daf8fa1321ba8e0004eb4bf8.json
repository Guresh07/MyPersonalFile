{"ast":null,"code":"var _jsxFileName = \"D:\\\\react\\\\myFiles\\\\data-storage-client\\\\src\\\\components\\\\UploadFile.jsx\",\n  _s = $RefreshSig$();\nimport { useState, useEffect } from \"react\";\nimport axios from \"axios\";\n// import fetchFiles  from \"./FileList\"; // Adjust the import path as necessary\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction UploadFile() {\n  _s();\n  const [file, setFile] = useState(null);\n  const [uploading, setUploading] = useState(false);\n  const [files, setFiles] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const fetchFiles = async () => {\n    try {\n      const token = localStorage.getItem(\"token\");\n      // console.log(\"Token being sent:\", token);\n      const res = await axios.get(\"http://localhost:5000/api/files/list\", {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n      // console.log(\"Files fetched:\", res.data.files);\n      setFiles(res.data.files);\n    } catch (err) {\n      console.error(\"Failed to fetch files\", err);\n    } finally {\n      setLoading(false);\n    }\n  };\n  const handleFileChange = e => {\n    const selectedFile = e.target.files[0];\n    if (selectedFile) {\n      // Optional: validate file size/type here\n      setFile(selectedFile);\n    }\n  };\n  const handleUpload = async () => {\n    if (!file) return alert(\"Please select a file first!\");\n    const formData = new FormData();\n    formData.append(\"file\", file);\n    try {\n      setUploading(true);\n      const token = localStorage.getItem(\"token\");\n      if (!token) {\n        alert(\"Please login first.\");\n        return;\n      }\n      await axios.post(\"http://localhost:5000/api/files/upload\", formData, {\n        headers: {\n          \"Content-Type\": \"multipart/form-data\",\n          Authorization: `Bearer ${token}`\n        }\n      });\n      alert(\"✅ File uploaded successfully!\");\n      // window.location.reload();\n      setFile(null); // reset file input\n      fetchFiles(); // Refresh file list after upload\n      document.getElementById(\"fileInput\").value = null;\n      // fetchFiles(); // Refresh file list after upload\n    } catch (err) {\n      console.error(err);\n      alert(\"❌ File upload failed. Please try again.\");\n    } finally {\n      setUploading(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Upload a File\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      id: \"fileInput\",\n      type: \"file\",\n      onChange: handleFileChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this), file && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Selected: \", /*#__PURE__*/_jsxDEV(\"strong\", {\n        children: file.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 29\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 16\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleUpload,\n      disabled: uploading,\n      children: uploading ? \"Uploading...\" : \"Upload\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 71,\n    columnNumber: 5\n  }, this);\n}\n_s(UploadFile, \"2xob03w/VoxyeJU6aq9VcwhYCQI=\");\n_c = UploadFile;\nexport default UploadFile;\nvar _c;\n$RefreshReg$(_c, \"UploadFile\");","map":{"version":3,"names":["useState","useEffect","axios","jsxDEV","_jsxDEV","UploadFile","_s","file","setFile","uploading","setUploading","files","setFiles","loading","setLoading","fetchFiles","token","localStorage","getItem","res","get","headers","Authorization","data","err","console","error","handleFileChange","e","selectedFile","target","handleUpload","alert","formData","FormData","append","post","document","getElementById","value","children","fileName","_jsxFileName","lineNumber","columnNumber","id","type","onChange","name","onClick","disabled","_c","$RefreshReg$"],"sources":["D:/react/myFiles/data-storage-client/src/components/UploadFile.jsx"],"sourcesContent":["import { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\n// import fetchFiles  from \"./FileList\"; // Adjust the import path as necessary\r\n\r\nfunction UploadFile() {\r\n  const [file, setFile] = useState(null);\r\n  const [uploading, setUploading] = useState(false);\r\n   const [files, setFiles] = useState([]);\r\n    const [loading, setLoading] = useState(true);\r\n\r\n    const fetchFiles = async () => {\r\n      try {\r\n        const token = localStorage.getItem(\"token\");\r\n        // console.log(\"Token being sent:\", token);\r\n        const res = await axios.get(\"http://localhost:5000/api/files/list\", {\r\n          headers: { Authorization: `Bearer ${token}` },\r\n        });\r\n        // console.log(\"Files fetched:\", res.data.files);\r\n        setFiles(res.data.files);\r\n      } catch (err) {\r\n        console.error(\"Failed to fetch files\", err);\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    };\r\n  const handleFileChange = (e) => {\r\n    const selectedFile = e.target.files[0];\r\n    if (selectedFile) {\r\n      // Optional: validate file size/type here\r\n      setFile(selectedFile);\r\n    }\r\n  };\r\n\r\n  const handleUpload = async () => {\r\n    if (!file) return alert(\"Please select a file first!\");\r\n\r\n    const formData = new FormData();\r\n    formData.append(\"file\", file);\r\n\r\n    try {\r\n      setUploading(true);\r\n      const token = localStorage.getItem(\"token\");\r\n            if (!token) {\r\n        alert(\"Please login first.\");\r\n        return;\r\n      }\r\n\r\n      await axios.post(\"http://localhost:5000/api/files/upload\", formData, {\r\n        headers: {\r\n          \"Content-Type\": \"multipart/form-data\",\r\n          Authorization: `Bearer ${token}`,\r\n        },\r\n      });\r\n\r\n      alert(\"✅ File uploaded successfully!\");\r\n      // window.location.reload();\r\n      setFile(null); // reset file input\r\n      fetchFiles(); // Refresh file list after upload\r\n      document.getElementById(\"fileInput\").value = null;\r\n      // fetchFiles(); // Refresh file list after upload\r\n    } catch (err) {\r\n      console.error(err);\r\n      alert(\"❌ File upload failed. Please try again.\");\r\n    } finally {\r\n      setUploading(false);\r\n    }\r\n  };\r\n \r\n\r\n  return (\r\n    <div>\r\n      <h3>Upload a File</h3>\r\n      <input id=\"fileInput\" type=\"file\" onChange={handleFileChange} />\r\n      {file && <p>Selected: <strong>{file.name}</strong></p>}\r\n      <button onClick={handleUpload} disabled={uploading}>\r\n        {uploading ? \"Uploading...\": \"Upload\"}\r\n        \r\n      </button>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default UploadFile;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}